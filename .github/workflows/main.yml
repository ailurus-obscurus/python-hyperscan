name: python-hyperscan workflow
on: [push]
env:
  pcre-version: 8.45
  hyperscan-version: v5.4.0
jobs:
  compile-libraries:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [macos-12]
    steps:
      - name: Cache pcre lib
        id: cache-pcre-macos
        uses: actions/cache@v3
        with:
          path: ~/pcre-lib
          key: pcre-lib-${{ env.pcre-version }}-macos-12

      - name: Build pcre on macos
        if: ${{ startsWith(matrix.platform, 'macos') && (steps.cache-pcre-macos.outputs.cache-hit != 'true') }}
        run: |
          wget -qO- https://sourceforge.net/projects/pcre/files/pcre/${{ env.pcre-version }}/pcre-${{ env.pcre-version }}.tar.gz/download | tar xvz
          mv pcre-${{ env.pcre-version }} pcre-lib
          cd pcre-lib
          sudo mkdir /opt/pcre-build
          ./configure --prefix=/opt/pcre-lib --enable-unicode-properties --enable-utf
          make && sudo make install
          sudo cp -r .libs /opt/pcre-build/
          sudo mv /opt/pcre-build build
          cd ..
          mv pcre-lib ~/

      - name: Cache hyperscan lib
        id: cache-hyperscan-macos
        uses: actions/cache@v3
        with:
          path: ~/hyperscan-lib
          key: hyperscan-lib-${{ env.hyperscan-version }}-macos-12

      - name: Build hyperscan on macos
        if: ${{ startsWith(matrix.platform, 'macos') && (steps.cache-hyperscan-macos.outputs.cache-hit != 'true') }}
        env:
          CFLAGS: -fPIC
          CXXFLAGS: -fPIC -D_GLIBCXX_USE_CXX11_ABI=1
        run: |
          brew install cmake boost ragel
          git clone -b ${{ env.hyperscan-version }} https://github.com/intel/hyperscan.git
          mkdir -p hyperscan/build
          cd hyperscan/build
          cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME/hyperscan-lib -DCMAKE_C_FLAGS="$CFLAGS" -DCMAKE_CXX_FLAGS="$CXXFLAGS" -DPCRE_SOURCE=$HOME/pcre-lib ..
          make -j10 && sudo make install
  build-wheels:
    runs-on: ${{ matrix.platform }}
    needs: compile-libraries
    strategy:
      matrix:
        # Only Linux is supported at the moment
        platform: [macos-12]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Cache pcre lib
        id: cache-pcre-macos
        uses: actions/cache@v3
        with:
          path: ~/pcre-lib
          key: pcre-lib-${{ env.pcre-version }}-macos-12
      - name: Cache hyperscan lib
        id: cache-hyperscan-macos
        uses: actions/cache@v3
        with:
          path: ~/hyperscan-lib
          key: hyperscan-lib-${{ env.hyperscan-version }}-macos-12
      - name: PCRE lib cache miss macos
        if: ${{ startsWith(matrix.platform, 'macos') && (steps.cache-pcre-macos.outputs.cache-hit != 'true') }}
        run: exit 1
      - name: Hyperscan lib cache miss macos
        if: ${{ startsWith(matrix.platform, 'macos') && (steps.cache-hyperscan-macos.outputs.cache-hit != 'true') }}
        run: exit 1
      - uses: actions/checkout@v2
      - name: Setup macos
        if: ${{ startsWith(matrix.platform, 'macos') }}
        run: |
          echo "PKG_CONFIG_PATH=$HOME/hyperscan-lib/lib/pkgconfig" >> $GITHUB_ENV
          echo "PCRE_PATH=$HOME/pcre-lib/build/.libs" >> $GITHUB_ENV
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.11"
      - name: Build and test
        run: |
          pip install -UI setuptools
          poetry install
          poetry build -vvv
          poetry run pytest -vvv tests/
      - run: |
          echo "WHEEL_NAME=$(basename $(ls dist/*.whl))" >> $GITHUB_ENV
      - name: Archive macos wheel
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.WHEEL_NAME }}
          path: dist/*.whl
